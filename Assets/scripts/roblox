import java.util.*;
public class Sum3 {
	/**
	 * Adds/appends list of integers at the end of internal list.
	 */
    public LinkedList<Integer> li = new LinkedList<Integer>();
   // public int[] arr = new arr[10];
    //distinct sum3s
    public HashMap<Integer, Integer> sums = new HashMap<Integer,Integer>();
    //public LinkedList<Integer> sums = new LinkedList<Integer>();
	public void addLast(int[] list) {
		//append at last
        if(list == null || list.length ==0)return;
        int oldLast = li.size()-2;
        for(int i=0;i<list.length;i++){
            li.add(list[i]);
        }
        if(li.size() < 3)return;
        Iterator<Integer> itr = li.iterator();
        int p0=itr.next();
        int p1 = itr.next();
        while(itr.hasNext()){
			int c = itr.next();
            if(!sums.containsKey(p0+p1+c)){
                sums.put(p0+p1+c, p0+p1+c);
            }
            p0 = p1;
            p1 = c;
        }
        
	}

	/**
	 * Returns boolean representing if any three consecutive integers in the
	 * internal list have given sum.
	 */
	public boolean containsSum3(int sum) {
		return sums.containsKey(sum);
	}

	public static void main(String[] args) {
		Sum3 s = new Sum3();

		s.addLast(new int[] { 1, 2, 3 });

		System.out.println(s.containsSum3(6));
		System.out.println(s.containsSum3(9));

		s.addLast(new int[] { 4 });

		System.out.println(s.containsSum3(9));
	}
}